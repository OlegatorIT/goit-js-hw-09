{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAElCC,EAAU,EAEdH,EAAOI,iBAAiB,UAAU,SAAAC,GA0BlC,IACQC,EAEAC,EA5BNF,EAAEG,iBA0BIF,EAASG,OAAOT,EAAOU,SAASJ,OAAOK,OAEvCJ,EAAcK,aAAY,WAxBlC,IAAuBC,EAAUC,EACzBC,EAwBAZ,GAAWG,GAzBIO,EA0BHV,EAzBZY,EAAON,OAAOT,EAAOU,SAASK,KAAKJ,OACzCG,EACc,IAAZX,EACIM,OAAOT,EAAOU,SAASI,MAAMH,OAC7BF,OAAOT,EAAOU,SAASI,MAAMH,QAAUR,EAAU,GAAKY,EACrD,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEJ,WAAUC,UAEpBI,EAAO,CAAEL,WAAUC,S,GAEpBA,GAEHQ,QAAQC,IAAIT,GACZX,G,KAUKqB,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjBY,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,IAGjDgB,OAAM,SAAAL,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAClBY,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,KAIjDkB,cAAczB,GACdJ,EAAU,E,GAEX,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nlet counter = 1;\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n  repeatPromis();\n});\n\nfunction createPromise(position, delay) {\n  const step = Number(formEl.elements.step.value);\n  delay =\n    counter === 1\n      ? Number(formEl.elements.delay.value)\n      : Number(formEl.elements.delay.value) + (counter - 1) * step;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n\n    console.log(delay);\n    counter++;\n  });\n}\n\nfunction repeatPromis() {\n  const amount = Number(formEl.elements.amount.value);\n\n  const interval_ID = setInterval(() => {\n    if (counter <= amount) {\n      createPromise(counter)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    } else {\n      clearInterval(interval_ID);\n      counter = 1;\n    }\n  }, 0);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$counter","addEventListener","e","amount","interval_ID","preventDefault","Number","elements","value","setInterval","position","delay","step","Promise","resolve","reject","setTimeout","Math","random","console","log","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","clearInterval"],"version":3,"file":"03-promises.51622eb5.js.map"}